---
import '../styles/global.css';

interface Props {
	title?: string | undefined;
	description?: string | undefined;
}

const {
	title = 'Ignacio Correcher: Personal Site',
	description = 'The personal site of Ignacio Correcher',
} = Astro.props;
---

<meta charset="UTF-8" />
<meta name="description" property="og:description" content={description} />
<meta name="viewport" content="width=device-width" />
<meta name="generator" content={Astro.generator} />
<title>{title}</title>

<link rel="icon" type="image/svg+xml" href="/favicon.svg" />
<link rel="preconnect" href="https://fonts.googleapis.com" />
<link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
<link
	href="https://fonts.googleapis.com/css2?family=Public+Sans:ital,wght@0,400;0,700;1,400&family=Rubik:wght@500;600&display=swap"
	rel="stylesheet"
/>
<script is:inline>
	// This code is inlined in the head to make dark mode instant & blocking.
	const getThemePreference = () => {
	  console.log('Getting theme preference');
	  // Remove any existing theme from localStorage
	  if (typeof localStorage !== 'undefined') {
		localStorage.removeItem('theme');
	  }
	  console.log('Defaulting to dark theme');
	  return 'dark'; // Always default to dark
	};
  
	const theme = getThemePreference();
	console.log('Theme set to:', theme);
  
	// Force dark theme
	document.documentElement.classList.add('theme-dark');
	console.log('Forced dark theme');
  
	if (typeof localStorage !== 'undefined') {
	  // Set the theme in localStorage
	  localStorage.setItem('theme', 'dark');
	  console.log('Dark theme set in localStorage');
	}
  
	// Ensure the theme is applied after the page loads
	window.addEventListener('DOMContentLoaded', (event) => {
	  document.documentElement.classList.add('theme-dark');
	  console.log('Reapplied dark theme after DOMContentLoaded');
	});
  </script>